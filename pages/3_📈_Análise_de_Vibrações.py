import streamlit as st
import numpy as np
import pandas as pd
from plotly.subplots import make_subplots
import plotly.graph_objects as go

st.set_page_config(page_title="An√°lise de Vibra√ß√µes", page_icon="üìà")

st.markdown("# An√°lise de Vibra√ß√µes")
st.sidebar.header("Aquisi√ß√£o e an√°lise dos dados de vibra√ß√µes")

st.subheader("Aquisi√ß√£o de Dados")
st.markdown(
    """
    A aquisi√ß√£o dos dados desta an√°lise foi feita conforme exibido no v√≠deo abaixo.

    O prot√≥tipo foi posicionado em cima do moto esmeril.
    A aquisi√ß√£o come√ßou com o moto esmeril desligado que, em seguida foi ligado e deixado em funcionamento por alguns minutos e desligado novamente.
    """
)

st.video("https://www.youtube.com/watch?v=mVAaTQE6XIs")

st.markdown(
    """
    Os dados foram adquiridos com a frequ√™ncia de 200 Hz, e o tempo total de aquisi√ß√£o foi de 163 segundos.

    A frequ√™ncia de amostragem deve ser pelo menos o dobro da frequ√™ncia de resson√¢ncia para garantir que os dados sejam capturados com precis√£o.
    Portanto, a escolha de 200 Hz como frequ√™ncia de amostragem foi feita para garantir que a frequ√™ncia de resson√¢ncia do sistema fosse capturada com precis√£o.
    A frequ√™ncia de resson√¢ncia do sistema √© a frequ√™ncia na qual o sistema vibra com maior amplitude, e √© importante para entender o comportamento din√¢mico do sistema.
    """
)

# Leitura e processamento dos dados
df = pd.read_csv("server/acceleration_data.csv")
N = len(df)                     # N√∫mero de amostras
fs = 200                        # Frequ√™ncia de amostragem (Hz)
T = 1 / fs                      # Per√≠odo de amostragem (s)
df['t'] = np.arange(0, N/fs, T) # Tempo (s)

# Gr√°ficos no dom√≠nio do tempo
st.subheader("Acelera√ß√£o no Dom√≠nio do Tempo")

st.markdown(
    """
    A acelera√ß√£o foi medida em tr√™s eixos: X, Y e Z. Os gr√°ficos abaixo mostram a acelera√ß√£o em cada eixo ao longo do tempo.

    A acelera√ß√£o √© uma medida da taxa de varia√ß√£o da velocidade de um objeto em movimento. Ela √© expressa em unidades de gravidade (g), onde 1 g √© igual √† acelera√ß√£o devido √† gravidade na superf√≠cie da Terra (aproximadamente 9,81 m/s¬≤).
    """
)

fig = make_subplots(rows=3, cols=1, subplot_titles=('Acelera√ß√£o no Eixo X (g)', 'Acelera√ß√£o no Eixo Y (g)', 'Acelera√ß√£o no Eixo Z (g)'))

fig.add_trace(go.Scatter(x=df['t'], y=df['ax'], name='X', line=dict(color='#8BE9FD')), row=1, col=1)
fig.add_trace(go.Scatter(x=df['t'], y=df['ay'], name='Y', line=dict(color='#50FA7B')), row=2, col=1)
fig.add_trace(go.Scatter(x=df['t'], y=df['az'], name='Z', line=dict(color='#FFB86C')), row=3, col=1)

fig.update_layout(height=1800, showlegend=True)
fig.update_xaxes(title_text="Tempo (s)")
fig.update_yaxes(title_text="Acelera√ß√£o (g)")

st.plotly_chart(fig, use_container_width=True)

# Gr√°ficos no dom√≠nio da frequ√™ncia
st.subheader("An√°lise de Frequ√™ncia (FFT)")

st.markdown(
    """
    A an√°lise de frequ√™ncia foi realizada utilizando a Transformada R√°pida de Fourier (FFT). A FFT √© uma t√©cnica matem√°tica que transforma um sinal do dom√≠nio do tempo para o dom√≠nio da frequ√™ncia.

    A FFT fornece informa√ß√µes sobre as frequ√™ncias presentes no sinal e suas respectivas amplitudes. Isso √© √∫til para identificar padr√µes e caracter√≠sticas do sinal que podem n√£o ser vis√≠veis no dom√≠nio do tempo.
    """
)

f = np.fft.fftfreq(N, T)
fft_x = np.abs(np.fft.fft(df['ax']))
fft_y = np.abs(np.fft.fft(df['ay']))
fft_z = np.abs(np.fft.fft(df['az']))

bins = np.arange(0, int(fs / 2) + 1)

fft_x_binned = np.histogram(f[f > 0], bins=bins, weights=fft_x[f > 0])[0] / np.histogram(f[f > 0], bins=bins)[0]
fft_y_binned = np.histogram(f[f > 0], bins=bins, weights=fft_y[f > 0])[0] / np.histogram(f[f > 0], bins=bins)[0]
fft_z_binned = np.histogram(f[f > 0], bins=bins, weights=fft_z[f > 0])[0] / np.histogram(f[f > 0], bins=bins)[0]

fig_fft = make_subplots(rows=3, cols=1, subplot_titles=('Transformada R√°pida de Fourier no Eixo X', 'Transformada R√°pida de Fourier no Eixo Y', 'Transformada R√°pida de Fourier no Eixo Z'))

fig_fft.add_trace(go.Scatter(x=bins, y=fft_x_binned, name='X', line=dict(color='#8BE9FD')), row=1, col=1)
fig_fft.add_trace(go.Scatter(x=bins, y=fft_y_binned, name='Y', line=dict(color='#50FA7B')), row=2, col=1)
fig_fft.add_trace(go.Scatter(x=bins, y=fft_z_binned, name='Z', line=dict(color='#FFB86C')), row=3, col=1)

fig_fft.update_layout(height=1800, showlegend=True)
fig_fft.update_xaxes(title_text="Frequ√™ncia (Hz)")
fig_fft.update_yaxes(title_text="Amplitude")

st.plotly_chart(fig_fft, use_container_width=True)

st.markdown(
    """
    Observamos que a FFT apresenta picos em determinadas frequ√™ncias, indicando a presen√ßa de componentes de frequ√™ncia espec√≠ficas no sinal.
    Esses picos podem estar relacionados a resson√¢ncias do sistema, como o pico nos 71Hz ou a outras caracter√≠sticas din√¢micas do sistema,
    como o pico pr√≥ximo dos 60Hz que √© a frequ√™ncia nominal da rede el√©trica.
    """
)